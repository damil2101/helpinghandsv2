main {
    padding: 1em;
  }
  
  .table-wrapper {
    overflow: auto;
      max-width: 100%;
      background:
          linear-gradient(to right, white 30%, rgba(255,255,255,0)),
          linear-gradient(to right, rgba(255,255,255,0), white 70%) 0 100%,
          radial-gradient(farthest-side at 0% 50%, rgba(0,0,0,.2), rgba(0,0,0,0)),
          radial-gradient(farthest-side at 100% 50%, rgba(0,0,0,.2), rgba(0,0,0,0)) 0 100%;
      background-repeat: no-repeat;
      background-color: white;
      background-size: 40px 100%, 40px 100%, 14px 100%, 14px 100%;
    background-position: 0 0, 100%, 0 0, 100%;
      background-attachment: local, local, scroll, scroll;
  }
  
  tr {
    border-bottom: 1px solid;
  }
  
  th {
    background-color: #5a4fdc;
    color: #fff;
    white-space: nowrap;
  }
  
  th,
  td {
    text-align: left;
    padding: 0.5em 1em;
  }
  
  .numeric {
    text-align: right;
  }
  
  p {
    text-align: right;
    margin-top: 1em;
    font-style: italic;
  }
  

/*
	Max width before this PARTICULAR table gets nasty. This query will take effect for any screen smaller than 760px and also iPads specifically.
	*/
	@media
	  only screen 
    and (max-width: 760px), (min-device-width: 768px) 
    and (max-device-width: 1024px)  {

		/* Force table to not be like tables anymore */
		table, thead, tbody, th, td, tr {
			display: block;
		}

		/* Hide table headers (but not display: none;, for accessibility) */
		thead tr {
			position: absolute;
			top: -9999px;
			left: -9999px;
		}

    tr {
      margin: 0 0 1rem 0;
    }
      
    tr:nth-child(odd) {
      background: #ccc;
    }
    
		td {
			/* Behave  like a "row" */
			border: none;
			border-bottom: 1px solid #eee;
			position: relative;
			padding-left: 50%;
		}

		td:before {
			/* Now like a table header */
			position: absolute;
			/* Top/left values mimic padding */
			top: 0;
			left: 6px;
			width: 45%;
			padding-right: 10px;
			white-space: nowrap;
		}

		/*
		Label the data
    You could also use a data-* attribute and content for this. That way "bloats" the HTML, this way means you need to keep HTML and CSS in sync. Lea Verou has a clever way to handle with text-shadow.
		*/
		td:nth-of-type(1):before { content: "Airline"; }
		td:nth-of-type(2):before { content: "Date"; }
		td:nth-of-type(3):before { content: "Status"; }
		td:nth-of-type(4):before { content: "Arrival Airport"; }
		td:nth-of-type(5):before { content: "Arrival Terminal"; }
		td:nth-of-type(6):before { content: "Arrival Gate"; }
		td:nth-of-type(7):before { content: "Arrival Time"; }
		td:nth-of-type(8):before { content: "Departure Airport"; }
		td:nth-of-type(9):before { content: "Departure Terminal"; }
        td:nth-of-type(10):before { content: "Departure Gate"; }
        td:nth-of-type(11):before { content: "Departure Time"; }
        td:nth-of-type(12):before { content: "Delayed by (mins)"; }
	}